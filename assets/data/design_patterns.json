[
    {
        "id": "creational",
        "title": "Creational",
        "color": "0xFFF3D250",
        "patterns": [
            {
                "id": "singleton",
                "title": "Singleton",
                "description": "Ensure a class only has one instance, and provide a global point of access to it.",
                "route": "/singleton"
            },
            {
                "id": "factory-method",
                "title": "Factory method",
                "description": "Specify the kinds of objects to create using a prototypical instance, and create new objects by copying this prototype.",
                "route": "/factory-method"
            },
            {
                "id": "abstract-factory",
                "title": "Abstract factory",
                "description": "Provide an interface for creating families of related or dependent objects without specifying their concrete classes.",
                "route": "/abstract-factory"
            }
        ]
    },
    {
        "id": "structural",
        "title": "Structural",
        "color": "0xFF90CCF4",
        "patterns": []
    },
    {
        "id": "behavioral",
        "title": "Behavioral",
        "color": "0xFFF78888",
        "patterns": []
    }
]